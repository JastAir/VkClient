apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'realm-android'

def appCompat = '1.0.0-beta01'

android {
    compileSdkVersion 30
    buildToolsVersion appCompat
    defaultConfig {
        applicationId "com.fdev.vkclient"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        project.ext.set("archivesBaseName", "vkclient" + defaultConfig.versionName)

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
 
        manifestPlaceholders = [adAppId:getLocalProperty("advertising.appId")]
        resConfigs "en", "ru"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BUILD_TIME", "\"${getDate()}\"")
            buildConfigField("String", "AD_ID", "\"${getLocalProperty('advertising.id')}\"")
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BUILD_TIME", "\"${getDate()}\"")
            buildConfigField("String", "AD_ID", "\"${getLocalProperty('advertising.id')}\"")
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "com.google.android.material:material:$appCompat"
    implementation "androidx.recyclerview:recyclerview:$appCompat"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.1'

    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    compileOnly "javax.annotation:jsr250-api:$jsrVersion"

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "de.hdodenhof:circleimageview:$circleImageViewVersion"
    implementation "com.github.orangegangsters:swipy:$swipyVersion"
    testImplementation "junit:junit:$junitVersion"
    implementation "com.github.QuadFlask:colorpicker:$colorpickerVersion"
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"

    implementation 'com.google.android.gms:play-services-ads:19.1.0'
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
//    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'

    room()
}

def room() {
    dependencies {
        implementation "androidx.room:room-runtime:2.3.0-alpha02"
        kapt "androidx.room:room-compiler:2.3.0-alpha02"
        implementation "androidx.room:room-rxjava2:2.3.0-alpha02"
    }
}

kapt {
    generateStubs = true
}

androidExtensions {
    experimental = true
}

repositories {
    mavenCentral()
}

static def getDate() {
    new Date().format('yyyy-MM-dd')
}

def getLocalProperty(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return ""
    }
}
